[workspace]
members = [
    "nginx-sys",
    "examples",
]

[workspace.package]
edition = "2021"
license = "Apache-2.0"
homepage = "https://github.com/nginx/ngx-rust"
repository = "https://github.com/nginx/ngx-rust"
rust-version = "1.79.0"

[package]
name = "ngx"
version = "0.5.0"
autoexamples = false
categories = ["api-bindings", "network-programming"]
description = "FFI bindings to NGINX"
keywords = ["nginx", "module", "sys"]
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[dependencies]
nginx-sys = { path = "nginx-sys", default-features=false, version = "0.5.0"}

[features]
default = ["vendored","std"]
# Enables the components using memory allocation.
# If no `std` flag, `alloc` crate is internally used instead. This flag is mainly for `no_std` build.
alloc = []
# Enables the components using `std` crate.
# Currently the only difference to `alloc` flag is `std::error::Error` implementation.
std = ["alloc"]
# Build our own copy of the NGINX by default.
# This could be disabled with `--no-default-features` to minimize the dependency
# tree when building against an existing copy of the NGINX with the
# NGINX_SOURCE_DIR/NGINX_BUILD_DIR variables.
vendored = ["nginx-sys/vendored"]
# test utility
test_util = []


[badges]
maintenance = { status = "experimental" }

[dev-dependencies]
target-triple = "0.1.2"
ngx = { path ="./", features = ["test_util"] }
